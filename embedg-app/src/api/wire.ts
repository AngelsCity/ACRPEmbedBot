// Code generated by tygo. DO NOT EDIT.
import {APIResponse} from "./base"

//////////
// source: guild.go

export interface GuildWire {
  id: string;
  name: string;
  icon: null | string;
  has_channel_with_user_access: boolean;
  has_channel_with_bot_access: boolean;
}
export type ListGuildsResponseWire = APIResponse<GuildWire[]>;
export type GetGuildResponseWire = APIResponse<GuildWire>;
export interface GuildChannelWire {
  id: string;
  name: string;
  position: number /* int */;
  parent_id: null | string;
  type: number /* int */;
  user_access: boolean;
  user_permissions: string;
  bot_access: boolean;
  bot_permissions: string;
}
export type ListChannelsResponseWire = APIResponse<GuildChannelWire[]>;
export interface GuildRoleWire {
  id: string;
  name: string;
  managed: boolean;
  color: number /* int */;
  position: number /* int */;
}
export type ListRolesResponseWire = APIResponse<GuildRoleWire[]>;
export interface GuildEmojiWire {
  id: string;
  name: string;
  available: boolean;
  animated: boolean;
  managed: boolean;
}
export type ListEmojisResponseWire = APIResponse<GuildEmojiWire[]>;
export interface GuildStickerWire {
  id: string;
  name: string;
  description: string;
  available: boolean;
  formant_type: number /* int */;
}
export type ListStickersResponseWire = APIResponse<GuildStickerWire[]>;
export interface GuildSubscriptionWire {
  updated_at: string /* RFC3339 */;
  plan: string;
  status: string;
}
export type ListGuildSubscriptionsResponseWire = APIResponse<GuildSubscriptionWire[]>;

//////////
// source: magic.go

export interface GenerateMagicMessageRequestWire {
  base_data: null | string;
  prompt: string;
}
export interface GenerateMagicMessagePromptWire {
  type: string;
  text: string;
}
export interface GenerateMagicMessageResponseDataWire {
  data: string;
}
export type GenerateMagicMessageResponseWire = APIResponse<GenerateMagicMessageResponseDataWire>;

//////////
// source: message.go

export interface SavedMessageWire {
  id: string;
  owner_id: string;
  guild_id: null | string;
  updated_at: string /* RFC3339 */;
  name: string;
  description: null | string;
  data: Record<string, any> | null;
}
export type SavedMessageListResponseWire = APIResponse<SavedMessageWire[]>;
export type SavedMessageGetResponseWire = APIResponse<SavedMessageWire>;
export interface SavedMessageCreateRequestWire {
  name: string;
  description: null | string;
  data: Record<string, any> | null;
}
export type SavedMessageCreateResponseWire = APIResponse<SavedMessageWire>;
export interface SavedMessageUpdateRequestWire {
  name: string;
  description: null | string;
  data: Record<string, any> | null;
}
export type SavedMessageUpdateResponseWire = APIResponse<SavedMessageWire>;
export type SavedMessageDeleteResponseWire = APIResponse<{
  }>;
export type SavedMessagesImportResponseWire = APIResponse<SavedMessageWire[]>;
export interface SavedMessagesImportRequestWire {
  messages: SavedMessageImportDataWire[];
}
export interface SavedMessageImportDataWire {
  name: string;
  description: null | string;
  data: Record<string, any> | null;
}
export interface MessageSendToWebhookRequestWire {
  webhook_id: string;
  webhook_token: string;
  thread_id: null | string;
  message_id: null | string;
  data: Record<string, any> | null;
  attachments: (MessageAttachmentWire | undefined)[];
}
export interface MessageSendToChannelRequestWire {
  guild_id: string;
  channel_id: string;
  message_id: null | string;
  data: Record<string, any> | null;
  attachments: (MessageAttachmentWire | undefined)[];
}
export interface MessageAttachmentWire {
  name: string;
  description: null | string;
  data_url: string;
  size: number /* int */;
}
export interface MessageSendResponseDataWire {
  message_id: string;
}
export type MessageSendResponseWire = APIResponse<MessageSendResponseDataWire>;
export interface MessageRestoreFromWebhookRequestWire {
  webhook_id: string;
  webhook_token: string;
  thread_id: null | string;
  message_id: string;
}
export interface MessageRestoreFromChannelRequestWire {
  guild_id: string;
  channel_id: string;
  message_id: string;
}
export interface MessageRestoreResponseDataWire {
  data: Record<string, any> | null;
  attachments: (MessageAttachmentWire | undefined)[];
}
export type MessageRestoreResponseWire = APIResponse<MessageRestoreResponseDataWire>;

//////////
// source: premium.go

export interface GetPremiumPlanFeaturesResponseDataWire {
  max_saved_messages: number /* int */;
}
export type GetPremiumPlanFeaturesResponseWire = APIResponse<GetPremiumPlanFeaturesResponseDataWire>;
export interface PremiumEntitlementWire {
  id: string;
  sku_id: string;
  user_id: null | string;
  guild_id: null | string;
  updated_at: string /* RFC3339 */;
  deleted: boolean;
  starts_at: string /* RFC3339 */;
  ends_at: string /* RFC3339 */;
}
export interface ListPremiumEntitlementsResponseDataWire {
  entitlements: PremiumEntitlementWire[];
}
export type ListPremiumEntitlementsResponseWire = APIResponse<ListPremiumEntitlementsResponseDataWire>;

//////////
// source: shared_message.go

export interface SharedMessageWire {
  id: string;
  created_at: string /* RFC3339 */;
  expires_at: string /* RFC3339 */;
  data: Record<string, any> | null;
  url: string;
}
export interface SharedMessageCreateRequestWire {
  data: Record<string, any> | null;
}
export type SharedMessageCreateResponseWire = APIResponse<SharedMessageWire>;
export type SharedMessageGetResponseWire = APIResponse<SharedMessageWire>;

//////////
// source: user.go

export interface UserWire {
  id: string;
  name: string;
  discriminator: string;
  avatar: null | string;
  is_tester: boolean;
}
export type UserResponseWire = APIResponse<UserWire>;
